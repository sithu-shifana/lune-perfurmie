<%- include('../partials/admin/header') %>
<main class="dashboard-content">
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <style>
      .brand-form-container {
        background: white;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        padding: 30px;
        margin: 20px auto;
        border-radius: 8px;
        max-width: 600px;
      }
      .form-label {
        font-size: 14px;
        color: #333;
        font-weight: 500;
        margin-bottom: 8px;
        display: block;
      }
      .form-control.brand-input {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
        box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);
        transition: border-color 0.3s ease;
      }
      .form-control.brand-input:focus {
        border-color: #4a6a4d;
        outline: none;
        box-shadow: 0 0 5px rgba(74,106,77,0.3);
      }
      .error-message {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: none;
      }
      .btn-primary {
        width: 100%;
        padding: 12px 20px;
        background-color: #4a6a4d;
        border: none;
        color: white;
        font-size: 14px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        border-radius: 4px;
      }
      .btn-primary:hover {
        background-color: #3a5a3d;
        box-shadow: 0 5px 10px rgba(0,0,0,0.25);
      }
      .btn-secondary {
        padding: 12px 20px;
        background-color: #6c757d;
        border: none;
        color: white;
        font-size: 14px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        border-radius: 4px;
        text-decoration: none;
        display: inline-block;
        text-align: center;
      }
      .btn-secondary:hover {
        background-color: #5a6268;
        box-shadow: 0 5px 10px rgba(0,0,0,0.25);
        text-decoration: none;
        color: white;
      }
      .actions-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
      }
      .actions-container .btn {
        width: 48%;
      }
      .mb-4 {
        margin-bottom: 20px;
      }
      .page-title {
        margin-bottom: 30px;
        color: #333;
        text-align: center;
      }
      #image-preview-container {
        margin-top: 10px;
        display: none;
      }
      #image-preview {
        max-width: 200px;
        max-height: 200px;
        border-radius: 4px;
      }
      #loading-spinner {
        display: none;
        margin-left: 10px;
      }
    </style>
  </head>
  <body>
    <section class="content-main">
            <div class="content-header">
        <h2 class="content-title">Add New Brand</h2>
      </div>

            <div class="brand-form-container">
        <h4 class="page-title">Create a New Brand</h4>
        <form id="addBrandForm" enctype="multipart/form-data">
          <div class="mb-4">
            <label for="brand_name" class="form-label">Brand Name</label>
            <input type="text" name="name" placeholder="Enter brand name" class="form-control brand-input" id="brand_name" />
            <div id="name-error" class="error-message"></div>
          </div>
          <div class="mb-4">
            <label for="brand_logo" class="form-label">Brand Logo</label>
            <input type="file" name="image" class="form-control brand-input" id="brand_logo" accept="image/jpeg,image/jpg,image/png" onchange="previewImage(this)" />
            <div id="image-error" class="error-message"></div>
            <div id="image-preview-container">
              <img id="image-preview" src="#" alt="Brand Logo Preview" />
            </div>
          </div>
          <div id="form-error" class="error-message" style="text-align: center;"></div>
          <div class="actions-container">
            <a href="/admin/brandManagement" class="btn btn-secondary">Cancel</a>
            <button class="btn btn-primary" type="submit" id="submit-btn">
              Create Brand
              <span id="loading-spinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            </button>
          </div>
        </form>
      </div>
    </section>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
      // Compress image before upload
      async function compressImage(file) {
        return new Promise((resolve) => {
          const reader = new FileReader();
          reader.onload = function (e) {
            const img = new Image();
            img.src = e.target.result;
            img.onload = function () {
              const canvas = document.createElement('canvas');
              const ctx = canvas.getContext('2d');
              const maxWidth = 500;
              let width = img.width;
              let height = img.height;

              if (width > maxWidth) {
                height = (maxWidth / width) * height;
                width = maxWidth;
              }

              canvas.width = width;
              canvas.height = height;
              ctx.drawImage(img, 0, 0, width, height);
              canvas.toBlob(
                (blob) => {
                  const compressedFile = new File([blob], file.name, {
                    type: 'image/jpeg',
                    lastModified: Date.now(),
                  });
                  resolve(compressedFile);
                },
                'image/jpeg',
                0.7
              );
            };
          };
          reader.readAsDataURL(file);
        });
      }

      // Preview image
      function previewImage(input) {
        const previewContainer = document.getElementById('image-preview-container');
        const preview = document.getElementById('image-preview');

        if (input.files && input.files[0]) {
          const reader = new FileReader();
          reader.onload = function (e) {
            preview.src = e.target.result;
            previewContainer.style.display = 'block';
          };
          reader.readAsDataURL(input.files[0]);
        } else {
          preview.src = '#';
          previewContainer.style.display = 'none';
        }
      }

      // Handle form submission
      async function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) return;

        const form = document.getElementById('addBrandForm');
        const submitBtn = document.getElementById('submit-btn');
        const loadingSpinner = document.getElementById('loading-spinner');
        const formData = new FormData(form);

        // Compress image if present
        const imageInput = document.getElementById('brand_logo');
        if (imageInput.files[0]) {
          const compressedImage = await compressImage(imageInput.files[0]);
          formData.set('image', compressedImage);
        }

        // Show loading state
        submitBtn.disabled = true;
        submitBtn.innerText = 'Creating...';
        loadingSpinner.style.display = 'inline-block';

        try {
          console.log('Submitting brand data:', [...formData.entries()]);
          const response = await fetch('/admin/brand-add', {
            method: 'POST',
            body: formData,
            credentials: 'include' // Add for session auth
          });
          console.log('Response status:', response.status);
          const data = await response.json();
          console.log('Response data:', data);

          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Success',
              text: data.message || 'Brand added successfully',
              timer: 1000,
              showConfirmButton: false
            }).then(() => {
              window.location.replace('/admin/brandManagement');
            });
          } else {
            const formErrorElement = document.getElementById('form-error');
            formErrorElement.innerText = data.error || 'Failed to add brand';
            formErrorElement.style.display = 'block';
          }
        } catch (error) {
          console.error('Fetch error:', error.message, error.stack);
          const formErrorElement = document.getElementById('form-error');
          formErrorElement.innerText = 'An unexpected error occurred';
          formErrorElement.style.display = 'block';
        } finally {
          submitBtn.disabled = false;
          submitBtn.innerText = 'Create Brand';
          loadingSpinner.style.display = 'none';
        }
      }

      // Validate form
      function validateForm() {
        clearErrorMessages();
        const name = document.getElementById('brand_name').value.trim();
        const image = document.getElementById('brand_logo').files[0];
        let isValid = true;

        if (!name) {
          displayErrorMessage('name-error', 'Please enter a name');
          isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
          displayErrorMessage('name-error', 'Name should contain only letters and spaces');
          isValid = false;
        }

        if (!image) {
          displayErrorMessage('image-error', 'Please upload a brand logo');
          isValid = false;
        } else if (!image.type.match(/image\/(jpeg|jpg|png)/)) {
          displayErrorMessage('image-error', 'Only JPEG/JPG/PNG images are allowed');
          isValid = false;
        }

        return isValid;
      }

      // Display error message
      function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = 'block';
      }

      // Clear error messages
      function clearErrorMessages(specificId = null) {
        if (specificId) {
          const errorElement = document.getElementById(specificId);
          if (errorElement) {
            element.innerText = '';
            errorElement.style.display = 'none';
          }
        } else {
          const errorElements = document.getElementsByClassName('error-message');
          Array.from(errorElements).forEach(element => {
            element.innerText = '';
            element.style.display = 'none';
          });
        }
      }

      // Setup real-time error clearing
      function setupEventListeners() {
        const nameInput = document.getElementById('brand_name');
        const imageInput = document.getElementById('brand_logo');

        nameInput.addEventListener('input', () => {
          clearErrorMessages('name-error');
          clearErrorMessages('form-error');
        });

        imageInput.addEventListener('change', () => {
          clearErrorMessages('image-error');
          clearErrorMessages('form-error');
        });

        // Attach form submit handler
        document.getElementById('addBrandForm').addEventListener('submit', handleFormSubmit);
      }

      // Initialize event listeners
      document.addEventListener('DOMContentLoaded', setupEventListeners);
    </script>
  </body>
</main>
