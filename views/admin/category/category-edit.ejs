<%- include('../partials/admin/header') %>
<main class="dashboard-content">
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <script defer src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <style>
      .category-form-container {
        background: white;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        padding: 30px;
        margin: 20px auto;
        border-radius: 8px;
        max-width: 600px;
      }

      .form-label {
        font-size: 14px;
        color: #333;
        font-weight: 500;
        margin-bottom: 8px;
        display: block;
      }

      .form-control.category-input {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
        box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);
        transition: border-color 0.3s ease;
      }

      .form-control.category-input:focus {
        border-color: #4a6a4d;
        outline: none;
        box-shadow: 0 0 5px rgba(74,106,77,0.3);
      }

      .form-control.category-textarea {
        height: 150px;
        resize: vertical;
      }

      .error-top {
        color: #dc3545;
        font-size: 16px;
        margin-bottom: 20px;
        display: none;
        background-color: #ffe0e0;
        border: 1px solid #ff4d4d;
        color: #a80000;
        padding: 12px 16px;
        border-radius: 8px;
        font-weight: 500;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
      }

      .field-error {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: none;
      }

      .btn-primary {
        width: 100%;
        padding: 12px 20px;
        background-color: #4a6a4d;
        border: none;
        color: white;
        font-size: 14px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        border-radius: 4px;
      }

      .btn-primary:hover {
        background-color: #3a5a3d;
        box-shadow: 0 5px 10px rgba(0,0,0,0.25);
      }

      .btn-primary:disabled {
        background-color: #a0a0a0;
        cursor: not-allowed;
      }

      .btn-secondary {
        padding: 12px 20px;
        background-color: #6c757d;
        border: none;
        color: white;
        font-size: 14px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        border-radius: 4px;
        text-decoration: none;
        display: inline-block;
        text-align: center;
      }

      .btn-secondary:hover {
        background-color: #5a6268;
        box-shadow: 0 5px 10px rgba(0,0,0,0.25);
        text-decoration: none;
        color: white;
      }

      .actions-container {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
      }

      .actions-container .btn {
        width: 48%;
      }

      .mb-4 {
        margin-bottom: 20px;
      }

      .page-title {
        margin-bottom: 30px;
        color: #333;
        text-align: center;
      }

      .image-preview-container {
        margin-top: 10px;
        display: none;
      }

      .image-preview {
        max-width: 100%;
        max-height: 200px;
        border: 1px solid #ddd;
        border-radius: 4px;
        object-fit: contain;
      }

      .loading-spinner {
        display: none;
        text-align: center;
        margin-top: 10px;
      }

      .loading-spinner::after {
        content: '';
        display: inline-block;
        width: 24px;
        height: 24px;
        border: 3px solid #4a6a4d;
        border-radius: 50%;
        border-top-color: transparent;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to { transform: rotate(360deg); }
      }
    </style>
  </head>
  <body>
    <section class="content-main">
      <div class="content-header">
        <h2 class="content-title">Edit Category</h2>
      </div>
      <div class="category-form-container">
        <h4 class="page-title">Update Category</h4>
        <p id="topError" class="error-top"></p>

        <form id="editCategoryForm" enctype="multipart/form-data">
          <input type="hidden" name="categoryId" value="<%= category._id %>" />
          <div class="mb-4">
            <label for="category_name" class="form-label">Category Name</label>
            <input type="text" name="name" placeholder="Enter category name" class="form-control category-input" id="category_name" value="<%= category.name %>" />
            <p id="nameError" class="field-error"></p>
          </div>
          <div class="mb-4">
            <label for="category_description" class="form-label">Description</label>
            <textarea name="description" placeholder="Enter category description" class="form-control category-input category-textarea" id="category_description"><%= category.description %></textarea>
            <p id="descriptionError" class="field-error"></p>
          </div>
          <div class="mb-4">
            <label for="category_image" class="form-label">Category Image</label>
            <input type="file" name="image" class="form-control category-input" id="category_image" accept="image/*" onchange="previewImage(this)" />
            <p id="imageError" class="field-error"></p>
            <div id="image-preview-container" class="image-preview-container" style="display: <%= category.imageUrl ? 'block' : 'none' %>;">
              <img id="image-preview" class="image-preview" src="<%= category.imageUrl || '#' %>" alt="Preview" />
            </div>
          </div>
          <div class="actions-container">
            <a href="/admin/categoryManagement" class="btn btn-secondary">Cancel</a>
            <button class="btn btn-primary" type="submit" id="submit-btn">Update Category</button>
          </div>
          <div id="loading-spinner" class="loading-spinner"></div>
        </form>
      </div>
    </section>

    <script>
      // Compress image before upload
      async function compressImage(file) {
        return new Promise((resolve) => {
          const reader = new FileReader();
          reader.onload = function (e) {
            const img = new Image();
            img.src = e.target.result;
            img.onload = function () {
              const canvas = document.createElement('canvas');
              const ctx = canvas.getContext('2d');
              const maxWidth = 500;
              let width = img.width;
              let height = img.height;

              if (width > maxWidth) {
                height = (maxWidth / width) * height;
                width = maxWidth;
              }

              canvas.width = width;
              canvas.height = height;
              ctx.drawImage(img, 0, 0, width, height);
              canvas.toBlob(
                (blob) => {
                  const compressedFile = new File([blob], file.name, {
                    type: 'image/jpeg',
                    lastModified: Date.now(),
                  });
                  resolve(compressedFile);
                },
                'image/jpeg',
                0.7
              );
            };
          };
          reader.readAsDataURL(file);
        });
      }

      function previewImage(input) {
        const previewContainer = document.getElementById('image-preview-container');
        const preview = document.getElementById('image-preview');
        
        if (input.files && input.files[0]) {
          const reader = new FileReader();
          reader.onload = function(e) {
            preview.src = e.target.result;
            previewContainer.style.display = 'block';
          };
          reader.readAsDataURL(input.files[0]);
        } else {
          preview.src = '<%= category.imageUrl || '#' %>';
          previewContainer.style.display = '<%= category.imageUrl ? 'block' : 'none' %>';
        }
      }
      
      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("editCategoryForm");
        const submitBtn = document.getElementById("submit-btn");
        const loadingSpinner = document.getElementById("loading-spinner");
        
        // Error elements
        const topError = document.getElementById("topError");
        const nameError = document.getElementById("nameError");
        const descriptionError = document.getElementById("descriptionError");
        const imageError = document.getElementById("imageError");

        // Clear errors on input
        form.addEventListener("input", () => {
          topError.textContent = "";
          topError.style.display = "none";
          nameError.textContent = "";
          nameError.style.display = "none";
          descriptionError.textContent = "";
          descriptionError.style.display = "none";
          imageError.textContent = "";
          imageError.style.display = "none";
        });

        // Form validation
        function validateForm() {
          let isValid = true;
          
          // Clear previous errors
          topError.textContent = "";
          topError.style.display = "none";
          nameError.textContent = "";
          nameError.style.display = "none";
          descriptionError.textContent = "";
          descriptionError.style.display = "none";
          imageError.textContent = "";
          imageError.style.display = "none";
          
          const name = document.getElementById('category_name').value.trim();
          const description = document.getElementById('category_description').value.trim();
          const image = document.getElementById('category_image').files[0];
          const existingImage = '<%= category.imageUrl %>';
          
          if (!name) {
            nameError.textContent = "Please enter a name";
            nameError.style.display = "block";
            isValid = false;
          }else if (!/^[a-zA-Z\s-_']+$/.test(name)) {
            nameError.textContent = "Name should contain only letters, spaces, hyphens, underscores, and apostrophes";
             nameError.style.display = "block";
            isValid = false;
          }
           else if (name.length < 3) {
            nameError.textContent = "Name must be at least 3 characters";
            nameError.style.display = "block";
            isValid = false;
          }
        
          if (!description) {
            descriptionError.textContent = "Please enter a description";
            descriptionError.style.display = "block";
            isValid = false;
          } else if (description.length < 10) {
            descriptionError.textContent = "Description must be at least 10 characters";
            descriptionError.style.display = "block";
            isValid = false;
          }
        
          if (image && !image.type.match(/image\/(jpeg|jpg|png)/)) {
            imageError.textContent = "Only JPEG/JPG/PNG images are allowed";
            imageError.style.display = "block";
            isValid = false;
          }
          
          return isValid;
        }

        // Submit form
        form.addEventListener("submit", async (e) => {
          e.preventDefault();
          
          if (!validateForm()) return;

          const formData = new FormData(form);
          
          // Compress image if a new one is uploaded
          const imageInput = document.getElementById('category_image');
          if (imageInput.files[0]) {
            const compressedImage = await compressImage(imageInput.files[0]);
            formData.set('image', compressedImage);
          }

          submitBtn.disabled = true;
          submitBtn.innerText = 'Updating...';
          loadingSpinner.style.display = 'block';

          try {
            const res = await fetch("/admin/category-edit/<%= category._id %>", {
              method: "POST",
              body: formData
            });

            const contentType = res.headers.get("content-type");
            if (!contentType || !contentType.includes("application/json")) {
              throw new Error("Invalid server response");
            }

            const data = await res.json();

            if (res.ok) {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: data.message || 'Category updated successfully',
                timer: 1000,
                showConfirmButton: false
              }).then(() => {
                window.location.replace('/admin/categoryManagement');
              });
            } else {
              if (data.errorType === "top") {
                topError.textContent = data.error || "Unexpected error";
                topError.style.display = "block";
              } else if (data.errorType === "name") {
                nameError.textContent = data.error || "Invalid name";
                nameError.style.display = "block";
              } else if (data.errorType === "description") {
                descriptionError.textContent = data.error || "Invalid description";
                descriptionError.style.display = "block";
              } else if (data.errorType === "image") {
                imageError.textContent = data.error || "Invalid image";
                imageError.style.display = "block";
              } else {
                topError.textContent = data.error || "Unexpected error";
                topError.style.display = "block";
              }
            }
          } catch (err) {
            topError.textContent = "Submission failed: " + err.message;
            topError.style.display = "block";
            console.error(err);
          } finally {
            submitBtn.disabled = false;
            submitBtn.innerText = 'Update Category';
            loadingSpinner.style.display = 'none';
          }
        });
      });
    </script>
  </body>
</main>
