<%- include('../partials/admin/header') %>
<main class="dashboard-content">
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
    <style>
      .form-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }
      .form-group {
        margin-bottom: 20px;
      }
      .form-group label {
        display: block;
        font-weight: 500;
        margin-bottom: 8px;
        color: #333;
      }
      .form-group input,
      .form-group select {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
      }
      .form-group input[type="checkbox"] {
        width: auto;
        margin-right: 10px;
      }
      .btn-primary {
        background-color: #4a6a4d;
        border: none;
        color: white;
        padding: 12px 20px;
        border-radius: 4px;
        cursor: pointer;
      }
      .btn-primary:hover:not(.loading) {
        background-color: #3a5a3d;
      }
      .btn-primary.loading {
        background-color: #6c757d;
        opacity: 0.6;
      }
      .error-message {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
        display: none;
      }
      .error-message.show {
        display: block;
      }
      .form-group.error input,
      .form-group.error select {
        border-color: #dc3545;
      }
      #topError {
        color: #dc3545;
        font-size: 14px;
        margin-bottom: 15px;
        padding: 10px;
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 4px;
        display: none;
      }
      #topError.show {
        display: block;
      }
      #maxDiscountGroup {
        display: <%= coupon.discountType === 'percentage' ? 'block' : 'none' %>;
      }
      .note {
        color: #666;
        font-size: 12px;
        margin-top: 5px;
        display: none;
      }
      .note.show {
        display: block;
      }
      .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
      }
      .spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #4a6a4d;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
      }
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
  </head>
  <body>
    <div class="loading-overlay" id="loadingOverlay">
      <div class="spinner"></div>
    </div>
    <section class="content-main">
      <div class="content-header">
        <h2 class="content-title">Edit Coupon</h2>
      </div>
      <div class="form-container">
        <div id="topError" class="error-message"><%= error || '' %></div>
        <form id="couponForm" action="/admin/coupon-edit/<%= coupon._id %>" method="post">
          <div class="form-group">
            <label for="code">Coupon Code <span style="color: red;">*</span></label>
            <input type="text" name="code" id="code" value="<%= coupon.code %>">
            <div id="codeError" class="error-message"></div>
            <div id="codeNote" class="note">Leave blank for auto-generated code (Referral only).</div>
          </div>
          <div class="form-group">
            <label for="discountType">Discount Type <span style="color: red;">*</span></label>
            <select name="discountType" id="discountType">
              <option value="">Select Discount Type</option>
              <option value="flat" <%= coupon.discountType === 'flat' ? 'selected' : '' %>>Flat</option>
              <option value="percentage" <%= coupon.discountType === 'percentage' ? 'selected' : '' %>>Percentage</option>
            </select>
            <div id="discountTypeError" class="error-message"></div>
          </div>
          <div class="form-group" id="discountValueGroup">
            <label for="discountValue" id="discountValueLabel">Discount Value <span style="color: red;">*</span></label>
            <input type="number" name="discountValue" id="discountValue" min="0.01" step="0.01" value="<%= coupon.discountValue || '' %>">
            <div id="discountValueError" class="error-message"></div>
            <div id="discountValueNote" class="note">Fixed ₹100 for referral coupons.</div>
          </div>
          <div class="form-group" id="maxDiscountGroup">
            <label for="maxDiscount">Max Discount (for percentage) <span style="color: red;">*</span></label>
            <input type="number" name="maxDiscount" id="maxDiscount" min="0" value="<%= coupon.maxDiscount || '' %>">
            <div id="maxDiscountError" class="error-message"></div>
          </div>
          <div class="form-group">
            <label for="minPurchase">Minimum Purchase <span style="color: red;">*</span></label>
            <input type="number" name="minPurchase" id="minPurchase" min="0" value="<%= coupon.minPurchase || '' %>">
            <div id="minPurchaseError" class="error-message"></div>
            <div id="minPurchaseNote" class="note">Fixed ₹500 for referral coupons.</div>
          </div>
          <div class="form-group">
            <label for="expiryDate">Expiry Date <span style="color: red;">*</span></label>
            <input type="date" name="expiryDate" id="expiryDate" value="<%= coupon.expiryDate ? coupon.expiryDate.toISOString().split('T')[0] : '' %>">
            <div id="expiryDateError" class="error-message"></div>
            <div id="expiryDateNote" class="note">Set to 30 days from now for referral coupons.</div>
          </div>
          <div class="form-group" style="display: none;">
            <label>
              <input type="checkbox" name="isReferral" id="isReferral" <%= coupon.isReferral ? 'checked' : '' %>> Is Referral Coupon
            </label>
          </div>
          <button type="submit" class="btn btn-primary" id="submitBtn">
            <span id="submitText">Update Coupon</span>
            <span id="submitLoading" style="display: none;">Updating...</span>
          </button>
        </form>
      </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('couponForm');
        const submitBtn = document.getElementById('submitBtn');
        const submitText = document.getElementById('submitText');
        const submitLoading = document.getElementById('submitLoading');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const topError = document.getElementById('topError');
        const discountTypeSelect = document.getElementById('discountType');
        const isReferralCheckbox = document.getElementById('isReferral');
        const maxDiscountGroup = document.getElementById('maxDiscountGroup');
        const codeNote = document.getElementById('codeNote');
        const discountValueNote = document.getElementById('discountValueNote');
        const minPurchaseNote = document.getElementById('minPurchaseNote');
        const expiryDateNote = document.getElementById('expiryDateNote');
        const discountValueInput = document.getElementById('discountValue');
        const discountValueLabel = document.getElementById('discountValueLabel');

        function clearErrors() {
          document.querySelectorAll('.error-message').forEach(el => {
            el.classList.remove('show');
            el.textContent = '';
          });
          document.querySelectorAll('.form-group').forEach(el => el.classList.remove('error'));
          topError.classList.remove('show');
        }

        function showError(errorType, message) {
          const errorElement = document.getElementById(`${errorType}Error`);
          const formGroup = errorElement?.closest('.form-group');
          
          if (errorElement) {
            errorElement.textContent = message || 'Invalid input';
            errorElement.classList.add('show');
            if (formGroup) formGroup.classList.add('error');
          } else {
            topError.textContent = message || 'Unexpected error';
            topError.classList.add('show');
          }
          topError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }

        function showTopError(message) {
          topError.textContent = message || 'Unexpected error';
          topError.classList.add('show');
          topError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }

        // Update discount value field based on discount type
        function updateDiscountValueField() {
          const type = discountTypeSelect.value;
          if (type === 'percentage') {
            discountValueLabel.textContent = 'Discount Percentage (%) *';
            discountValueInput.min = '1';
            discountValueInput.max = '50';
            discountValueInput.step = '1';
            // Only clear if not referral and no existing value
            if (!isReferralCheckbox.checked && !discountValueInput.value) {
              discountValueInput.value = '';
            }
          } else if (type === 'flat') {
            discountValueLabel.textContent = 'Discount Value (₹) *';
            discountValueInput.min = '0.01';
            discountValueInput.max = '';
            discountValueInput.step = '0.01';
            // Only clear if not referral and no existing value
            if (!isReferralCheckbox.checked && !discountValueInput.value) {
              discountValueInput.value = '';
            }
          }
          maxDiscountGroup.style.display = type === 'percentage' ? 'block' : 'none';
        }

        // Handle discount type change
        discountTypeSelect.addEventListener('change', updateDiscountValueField);

        // Handle referral checkbox change
        isReferralCheckbox.addEventListener('change', function() {
          const isChecked = this.checked;
          codeNote.classList.toggle('show', isChecked);
          discountValueNote.classList.toggle('show', isChecked);
          minPurchaseNote.classList.toggle('show', isChecked);
          expiryDateNote.classList.toggle('show', isChecked);

          const minPurchaseInput = document.getElementById('minPurchase');
          const expiryDateInput = document.getElementById('expiryDate');

          if (isChecked) {
            discountValueLabel.textContent = 'Discount Value (₹) *';
            discountValueInput.value = '100';
            discountValueInput.readOnly = true;
            discountValueInput.min = '100';
            discountValueInput.max = '100';
            discountValueInput.step = '0.01';
            minPurchaseInput.value = '500';
            minPurchaseInput.readOnly = true;
            const expiryDate = new Date();
            expiryDate.setDate(expiryDate.getDate() + 30);
            expiryDateInput.value = expiryDate.toISOString().split('T')[0];
            expiryDateInput.readOnly = true;
            maxDiscountGroup.style.display = 'none';
          } else {
            updateDiscountValueField();
            discountValueInput.readOnly = false;
            minPurchaseInput.readOnly = false;
            expiryDateInput.readOnly = false;
          }
        });

        // Set minimum date to today
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('expiryDate').min = today;

        // Form submission
        form.addEventListener('submit', async function(e) {
          e.preventDefault();
          clearErrors();

          submitBtn.classList.add('loading');
          submitText.style.display = 'none';
          submitLoading.style.display = 'inline';
          loadingOverlay.style.display = 'flex';

          try {
            const formData = new FormData(form);
            const payload = Object.fromEntries(formData.entries());
            payload.isReferral = payload.isReferral === 'on';

            // Client-side validation
            if (!payload.discountType) {
              throw new Error('Please select a discount type');
            }
            if (!payload.code && !payload.isReferral) {
              throw new Error('Coupon code is required');
            }
            if (!payload.discountValue && !payload.isReferral) {
              throw new Error(payload.discountType === 'percentage' ? 'Discount percentage is required' : 'Discount value is required');
            }
            if (payload.discountType === 'percentage' && (payload.discountValue < 1 || payload.discountValue > 100)) {
              throw new Error('Discount percentage must be between 1 and 100');
            }
            if (!payload.minPurchase && !payload.isReferral) {
              throw new Error('Minimum purchase is required');
            }
            if (!payload.expiryDate && !payload.isReferral) {
              throw new Error('Expiry date is required');
            }
            if (payload.discountType === 'percentage' && !payload.maxDiscount) {
              throw new Error('Max discount is required for percentage coupons');
            }

            // Set defaults for referral coupons
            if (payload.isReferral && !payload.code) {
              payload.code = `REF${Math.random().toString(36).substring(2, 8).toUpperCase()}`;
            }

            const response = await fetch(`/admin/coupon-edit/<%= coupon._id %>`, {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(payload)
            });

            const contentType = response.headers.get('content-type');
            if (!contentType || !contentType.includes('application/json')) {
              throw new Error('Invalid server response');
            }

            const data = await response.json();

            if (response.ok) {
              await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Coupon updated successfully!',
                timer: 2000,
                showConfirmButton: false
              });
              window.location.href = '/admin/couponManagement';
            } else {
              if (data.errorType === 'top') {
                showTopError(data.error);
              } else if (data.errorType === 'code') {
                showError('code', data.error || 'Please enter a valid coupon code');
              } else if (data.errorType === 'discountType') {
                showError('discountType', data.error || 'Please select a valid discount type');
              } else if (data.errorType === 'discountValue') {
                showError('discountValue', data.error || 'Please enter a valid discount value');
              } else if (data.errorType === 'maxDiscount') {
                showError('maxDiscount', data.error || 'Please enter a valid max discount');
              } else if (data.errorType === 'minPurchase') {
                showError('minPurchase', data.error || 'Please enter a valid minimum purchase amount');
              } else if (data.errorType === 'expiryDate') {
                showError('expiryDate', data.error || 'Please select a valid expiry date');
              } else {
                showTopError(data.error || 'Unexpected error occurred');
              }
            }
          } catch (error) {
            console.error('Submission error:', error);
            let errorMessage = 'Submission failed: Network error occurred';
            
            if (error.message.includes('Failed to fetch')) {
              errorMessage = 'Submission failed: Unable to connect to the server. Please check your internet connection.';
            } else if (error.message === 'Invalid server response') {
              errorMessage = 'Submission failed: Server returned an invalid response. Please try again.';
            } else {
              errorMessage = error.message;
            }

            showTopError(errorMessage);
          } finally {
            submitBtn.classList.remove('loading');
            submitText.style.display = 'inline';
            submitLoading.style.display = 'none';
            loadingOverlay.style.display = 'none';
          }
        });

        // Initialize form state
        updateDiscountValueField();
        isReferralCheckbox.dispatchEvent(new Event('change'));
      });
    </script>
  </body>
</main>