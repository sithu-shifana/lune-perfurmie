<%- include('../partials/user/header') %>

<style>
@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;600&display=swap');

.content-placeholder {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-top: 20px;
  padding: 0 20px; 
}

.filter-container {
  position: relative;
  font-family: 'Outfit', sans-serif;
}

.filter-sidebar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  background: #f9f9f9;
  color: #333;
  padding: 20px;
  transition: transform 0.4s ease;
  z-index: 1000;
  transform: translateY(100%);
}

.filter-sidebar.active {
  transform: translateY(0%);
}

.filter-toggle {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: #5b4944;
  color: #ffffff;
  padding: 10px 18px;
  font-weight: 600;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 8px;
  z-index: 1100;
  font-family: 'Outfit', sans-serif;
}

.filter-toggle i {
  font-size: 16px;
}

.filter-sidebar h3 {
  font-size: 22px;
  margin-bottom: 15px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  padding-bottom: 5px;
  color: #333;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

.filter-sidebar select,
.filter-sidebar input {
  width: 100%;
  padding: 8px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-family: 'Outfit', sans-serif;
  font-size: 16px;
}

.filter-sidebar .filter-actions {
  display: flex;
  gap: 10px;
  margin-top: 15px;
}

.filter-sidebar .apply-btn,
.filter-sidebar .clear-btn {
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  font-family: 'Outfit', sans-serif;
  font-size: 16px;
  cursor: pointer;
}

.filter-sidebar .apply-btn {
  background-color: #8b7a75;
  color: #ffffff;
}

.filter-sidebar .apply-btn:hover {
  background-color: #a7a19f;
  color: #ffffff;
}

.filter-sidebar .clear-btn {
  background-color: #fff;
  color: #5b4944;
  border: 1px solid #5b4944;
  text-decoration: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 992px) {
  .content-placeholder {
    flex-direction: row;
  }

  .filter-sidebar {
    margin-left: 10px;
    position: sticky;
    background-color: white;
    top: 80px;
    left: 10px;
    width: 280px;
    min-height: calc(100vh - 80px); 
    transform: translateY(0) !important;
    max-height: none;
    display: flex;
    flex-direction: column;
    margin-right: 30px;
  }

  .filter-form {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .filter-actions {
    margin-top: auto; 
    padding-bottom: 20px;
  }

  .filter-toggle {
    display: none;
  }

  .products-container {
    margin-left: 20px;
    flex: 1;
    max-width: 1000px; 
  }
}

.filter-sidebar select {
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
  color: #444;
}

.filter-sidebar select option {
  color: #444;
  font-family: inherit;
}

.filter-sidebar select option[value=""] {
  color: #888;
  font-style: italic;
}

select, input {
  border-radius: 8px;
  padding: 8px;
  border: 1px solid #ccc;
  font-size: 15px;
  transition: 0.3s;
}

select:hover, input:focus {
  border-color: #aa7c5b;
  box-shadow: 0 0 5px rgba(170, 124, 91, 0.3);
}

.products-container {
  flex-grow: 1;
}

.products-grid {
  display: grid;
  gap: 20px;
  margin-bottom: 30px;
  grid-template-columns: repeat(2, 1fr);
}

@media (min-width: 600px) {
  .products-grid {
    grid-template-columns: repeat(3, 1fr);
  }
  .product-card .original-price {
    color: #888;
    text-decoration: line-through;
    font-size: 15px;
    padding-right: 10px;
    margin-top: 2px;
  }
  .product-card .offer-price {
    font-weight: 700;
    color: #333;
    font-size: 18px;
    padding-right: 50px;
  }
  .product-card .discount {
    color: #d32f2f;
    font-size: 15px;
    margin-top: 2px;
  }
}

@media (min-width: 1200px) {
  .products-grid {
    grid-template-columns: repeat(4, 1fr);
  }
  .product-card .original-price {
    color: #888;
    text-decoration: line-through;
    font-size: 15px;
    padding-right: 10px;
    margin-top: 2px;
  }
  .product-card .offer-price {
    font-weight: 700;
    color: #333;
    font-size: 18px;
    padding-right: 50px;
  }
  .product-card .discount {
    color: #d32f2f;
    font-size: 15px;
    margin-top: 2px;
  }
}

.pagination-simple {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 20px;
  flex-wrap: wrap;
  margin-bottom: 60px;
}

.pagination-btn {
  padding: 5px 10px;
  background-color: #f0f0f0;
  border-radius: 5px;
  color: #333;
  text-decoration: none;
  transition: background 0.2s;
}

.pagination-btn:hover {
  background-color: #dcdcdc;
}

.pagination-btn.active {
  background-color: #333;
  color: white;
  font-weight: bold;
  pointer-events: none;
}

.pagination-dots {
  padding: 5px 8px;
  color: #888;
}


.product-card {
  position: relative;
  background: #fff;
  border-radius: 8px;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  padding: 2px;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.product-card .wishlist-icon {
  position: absolute;
  top: 15px;
  right: 15px;
  font-size: 20px;
  color: grey;
  cursor: pointer;
  transition: color 0.3s ease;
}

.product-card .wishlist-icon:hover {
  color: #d32f2f;
}

.product-card .wishlist-icon.active {
  color: red;
}

.product-card h3 {
  font-size: 18px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.product-card .price-container {
  display: flex;
  flex-wrap: nowrap; 
}

@media (max-width: 600px) {
  .products-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
  }

  .product-card .price-container {
    display: flex;
    flex-wrap: nowrap; 
  }

  .product-card .original-price {
    color: #888;
    text-decoration: line-through;
    font-size: 13px;
    padding-right: 10px;
    margin-top: 2px;
  }

  .product-card .offer-price {
    font-weight: 700;
    color: #333;
    font-size: 17px;
    padding-right: 10px;
  }

  .product-card .discount {
    color: #d32f2f;
    font-size: 12px;
    margin-top: 2px;
  }
}

#searchContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }

  #searchInput {
    padding: 10px 14px;
    font-size: 15px;
    border: 1px solid #b7a69b;
    border-radius: 6px;
    background-color: #f9f9f6;
    color: #333;
    width: 250px;
    outline: none;
    transition: border-color 0.2s ease;
  }

  #searchInput:focus {
    border-color: #bbad9b;
  }

  #searchBtn {
    padding: 10px 16px;
    font-size: 15px;
    background-color: #5f5038;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  #searchBtn:hover {
    background-color: #767c5f;
  }

  #result {
    text-align: center;
    font-size: 14px;
    color: #555;
  }


  #searchContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  flex-wrap: wrap;
  margin-bottom: 20px;
}

#searchInput {
  padding: 12px 16px;
  font-size: 15px;
  border: 2px solid #ddd;
  border-radius: 8px;
  background-color: #fff;
  color: #333;
  width: 300px;
  outline: none;
  transition: border-color 0.3s ease;
}

#searchInput:focus {
  border-color: #5f5038;
}

#searchBtn {
  padding: 12px 16px;
  background-color: #5f5038;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 48px;
}

#searchBtn:hover {
  background-color: #767c5f;
  transform: translateY(-1px);
}

#searchBtn:active {
  transform: translateY(0);
}

#searchBtn svg {
  transition: transform 0.2s ease;
}

#searchBtn:hover svg {
  transform: scale(1.1);
}

#result {
  text-align: center;
  font-size: 14px;
  color: #555;
}

@media (max-width: 480px) {
  #searchInput {
    width: 250px;
  }
}
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<% if (typeof csrfToken !== 'undefined') { %>
  <meta name="csrf-token" content="<%= csrfToken %>">
<% } %>

<div class="content-placeholder">

  <div id="login-alert" style="
  display: none; position: fixed; top: 30px; left: 50%; transform: translateX(-50%);
  background: #fff; color: #333; padding: 16px 24px; border: 1px solid #ccc;
  border-radius: 8px; font: 16px 'Segoe UI', sans-serif; box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  z-index: 9999; min-width: 280px; text-align: center;
">
  ⚠️ Please <a href="/login" style="color:#007bff; text-decoration: underline;">log in</a> to add to wishlist.
  <span onclick="hideLoginAlert()" style="position:absolute; top:8px; right:12px; cursor:pointer; color:#888;">×</span>
</div>




  <div class="filter-container">
    <button id="filterToggle" class="filter-toggle">
      <i class="fas fa-filter"></i>
      Filter
    </button>

    <div id="filterSidebar" class="filter-sidebar">
      <h3 style="font-family: 'Paytone One', sans-serif; font-weight: 400; font-style: normal; font-size: 30px; text-align: center; margin-bottom: 40px;">
        FILTERS
      </h3>

      <form action="/products" method="GET" class="filter-form">
        <div class="filter-section">
          <h3>Categories</h3>
          <select name="category">
            <option value="">All Categories</option>
            <% categories.forEach(cat => { %>
              <option value="<%= cat._id %>" <%= query.category === cat._id.toString() ? 'selected' : '' %>><%= cat.name %></option>
            <% }) %>
          </select>
        </div>
        <div class="filter-section">
          <h3>Brands</h3>
          <select name="brand">
            <option value="">All Brands</option>
            <% brands.forEach(brand => { %>
              <option value="<%= brand._id %>" <%= query.brand === brand._id.toString() ? 'selected' : '' %>><%= brand.name %></option>
            <% }) %>
          </select>
        </div>
        <div class="filter-section">
          <h3>Price Range</h3>
          <input type="number" name="minPrice" placeholder="Min Price" value="<%= minPrice %>">
  <input type="number" name="maxPrice" placeholder="Max Price" value="<%= maxPrice %>">
        </div>
        <div class="filter-section">
          <h3>Sort By</h3>
          <select name="sort">
            <option value="">Select Sort Option</option>
            <option value="priceLowHigh" <%= query.sort === 'priceLowHigh' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="priceHighLow" <%= query.sort === 'priceHighLow' ? 'selected' : '' %>>Price: High to Low</option>
            <option value="nameAZ" <%= query.sort === 'nameAZ' ? 'selected' : '' %>>A-Z</option>
            <option value="nameZA" <%= query.sort === 'nameZA' ? 'selected' : '' %>>Z-A</option>
            <option value="newArrivals" <%= query.sort === 'newArrivals' ? 'selected' : '' %>>New Arrivals</option>
          </select>
        </div>
        <input type="hidden" name="page" value="<%= currentPage %>">
        <div class="filter-actions">
          <button type="submit" class="apply-btn">Apply</button>
          <a href="/products" class="clear-btn">Clear</a>
        </div>
      </form>
    </div>
  </div>

  <!-- Products container -->
  <div class="products-container">


<form action="/products" method="GET" class="search-form" id="searchContainer">
  <input
    type="text"
    id="searchInput"
    name="search"
    placeholder="Search the best one..."
    value="<%= query.search %>"
  />
  <button type="submit" id="searchBtn">
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <circle cx="11" cy="11" r="8"/>
      <path d="m21 21-4.35-4.35"/>
    </svg>
  </button>
</form>


    <!-- Products Grid -->
    <div class="products-grid">
    <% if (products.length === 0) { %>
  <p>No products found.</p>
   <% } else { %>  
        <% products.forEach(product => { %>
    <div class="product-card">
      <a href="/product-show/<%= product._id %>" style="text-decoration: none; color: inherit;">
        <!-- Show first image from images array -->
        <img src="<%= product.images.length ? product.images[0].url : '/images/placeholder.png' %>" alt="<%= product.productName %>" style="width: 100%; height: 180px; object-fit: cover; border-radius: 4px;">
        <h3 style="margin: 10px 0 5px; font-size: 17px;"><%= product.productName %></h3>
        <p style="color: #666; font-size: 14px; margin-bottom: 2px;">Brand: <%= product.brand.brandName || product.brand.name %></p>
          <div class="price-container">
          <% const variant = product.variants[0]; %>
          <% if (variant.hasOffer) { %>
            <div class="price-section">
              <span class="original-price">₹<%= variant.originalPrice %></span>
              <span class="offer-price">₹<%= variant.offerPrice %></span>
              <span class="discount-badge">
                <% if (variant.discountType === 'percentage') { %>
                  <%= variant.discountValue %>% OFF
                <% } else { %>
                  ₹<%= variant.discountValue %> OFF
                <% } %>
              </span>
            </div>
          <% } else { %>
            <div class="price-section">
              <span class="offer-price">₹<%= variant.originalPrice %></span>
            </div>
          <% } %>
        </div>
      </a>
      <!-- Heart icon for wishlist -->
      <i id="wishlist-icon-<%= product._id %>" 
         class="fas fa-heart wishlist-icon <%= product.isInWishlist ? 'active' : '' %>" 
         data-product-id="<%= product._id %>" 
         onclick="toggleWishlist('<%= product._id %>')">
      </i>
    </div>
  <% }) %>
  <% } %>

</div>


<% if (totalPages > 1) { %>
  <div class="pagination-simple">
    <% 
      const startPage = Math.max(1, currentPage - 2);
      const endPage = Math.min(totalPages, currentPage + 2);
    %>

    <% if (startPage > 1) { %>
      <a href="?page=1" class="pagination-btn">1</a>
      <% if (startPage > 2) { %>
        <span class="pagination-dots">...</span>
      <% } %>
    <% } %>

    <% for (let i = startPage; i <= endPage; i++) { %>
      <% if (i === currentPage) { %>
        <span class="pagination-btn active"><%= i %></span>
      <% } else { %>
        <a href="?page=<%= i %>" class="pagination-btn"><%= i %></a>
      <% } %>
    <% } %>

    <% if (endPage < totalPages) { %>
      <% if (endPage < totalPages - 1) { %>
        <span class="pagination-dots">...</span>
      <% } %>
      <a href="?page=<%= totalPages %>" class="pagination-btn"><%= totalPages %></a>
    <% } %>
  </div>
<% } %>


<script>
  // Filter sidebar toggle
  const toggleBtn = document.getElementById('filterToggle');
  const sidebar = document.getElementById('filterSidebar');

  toggleBtn.addEventListener('click', function (e) {
    e.stopPropagation();
    sidebar.classList.toggle('active');
  });

  // Close sidebar on outside click only for mobile
  document.addEventListener('click', function (e) {
    if (
      !sidebar.contains(e.target) &&
      !toggleBtn.contains(e.target) &&
      window.innerWidth < 992
    ) {
      sidebar.classList.remove('active');
    }
  });

  // Close sidebar on window resize from desktop to mobile
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 992) {
      sidebar.classList.remove('active');
    }
  });

  // Retain form values on sidebar reopen
  const filterForm = document.querySelector('.filter-form');
  filterForm.addEventListener('submit', function (e) {
    sidebar.classList.remove('active'); // Close sidebar on mobile after apply
  });

  function showLoginAlert() {
  document.getElementById('login-alert').style.display = 'block';
}
function hideLoginAlert() {
  document.getElementById('login-alert').style.display = 'none';
}


function toggleWishlist(productId) {
  if (!productId) return alert('Invalid product ID');

  const btn = document.getElementById(`wishlist-icon-${productId}`);
  if (!btn) return console.error('Wishlist icon not found');

  btn.style.pointerEvents = 'none'; 

  const headers = {};
  const csrf = document.querySelector('meta[name="csrf-token"]')?.content;
  if (csrf) headers['CSRF-Token'] = csrf;

  fetch(`/wishlist-toggle/${productId}`, {
    method: 'POST',
    headers,
    credentials: 'include'
  })
    .then(res => {
      if (res.status === 401) {
          showLoginAlert(); 
      return;
      }
      return res.json();
    })
    .then(data => {
      if (!data?.success) return alert('Failed to update wishlist');
      btn.classList.toggle('active', data.isInWishlist);
    })
    .catch(err => {
      console.error('Wishlist toggle error:', err);
      showLoginAlert();
    })
    .finally(() => {
      btn.style.pointerEvents = 'auto';
    });
}

</script>

