<%- include('../partials/user/header') %>
<div class="content-placeholder">
    <div class="container-fluid">
        <div class="row">
            <!-- Form Side -->
            <div class="col-md-6">
                <div class="form-container">
                    <h1 class="mb-4">Verify OTP</h1>
                    <form id="otpForm">
                        <p id="topError" class="error-top"></p>
                        
                        <div class="mb-3">
                            <label class="form-label">Enter 6-digit OTP sent to your email:</label>
                            <div class="otp-container">
                                <input type="text" class="otp-input" maxlength="1" autofocus>
                                <input type="text" class="otp-input" maxlength="1">
                                <input type="text" class="otp-input" maxlength="1">
                                <input type="text" class="otp-input" maxlength="1">
                                <input type="text" class="otp-input" maxlength="1">
                                <input type="text" class="otp-input" maxlength="1">
                                <input type="hidden" id="otpInput" name="otp">
                                <input type="hidden" id="userEmail" name="email">
                            </div>
                        </div>
                        
                        <button type="submit" class="my-otp-btn mt-4">Verify</button>
                        
                        <div class="resend-container mt-4">
                            <span class="countdown-text">Resend code in <span id="countdown">60s</span></span>
                            <button type="button" id="resendBtn" class="btn btn-link" disabled>Resend OTP</button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- Image Side -->
            <div class="col-md-6 image-side d-none d-md-block">
                <!-- Image will be displayed via CSS -->
            </div>
        </div>
    </div>
</div>

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        overflow: hidden;
        font-family: Arial, sans-serif;
        background-color: var(--white);
        color: var(--dark-grey);
    }

    * {
        box-sizing: border-box;
    }

    :root {
        --dark-brown: #473d47;
        --pink: #53412e;
        --lavender: #5b4e43;
        --champagne: #DCCCB2;
        --amber: #D4A76A;
        --dark-grey: #2A2A2A;
        --medium-grey: #666666;
        --light-grey: #fdf9f5;
        --white: #fcf9fb;
    }

    .content-placeholder {
        padding: 0;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding-top: 80px;
        box-sizing: border-box;
    }

    .container-fluid, .row {
        height: 100%;
        padding: 0;
        margin: 0;
    }
    
    .row {
        display: flex;
    }

    .form-container {
        background-color: var(--white);
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        padding: 20px;
    }

    h1 {
        color: var(--dark-brown);
        font-weight: 600;
        margin-bottom: 25px;
    }

    .form-label {
        color: var(--dark-brown);
        font-weight: 500;
    }

    .otp-container {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
        gap: 10px;
    }

    .otp-input {
        width: 48px;
        height: 48px;
        border: 1px solid var(--champagne);
        border-radius: 5px;
        text-align: center;
        font-size: 18px;
        font-weight: 600;
        color: var(--dark-brown);
        transition: all 0.3s ease;
    }

    .otp-input:focus {
        border-color: var(--pink);
        box-shadow: 0 0 0 0.2rem rgba(229, 167, 183, 0.25);
        outline: none;
    }

    .my-otp-btn {
        background-color: var(--lavender);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        width: 100%;
        border-radius: 5px;
        color: white;
    }

    .my-otp-btn:hover {
        background-color: var(--dark-brown);
    }

    .resend-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 5px;
    }

    .countdown-text {
        color: var(--medium-grey);
        font-size: 14px;
    }

    #countdown {
        font-weight: 600;
    }

    .btn-link {
        color: var(--pink);
        text-decoration: none;
        padding: 0;
        font-weight: 500;
        background: none;
        border: none;
    }

    .btn-link:hover:not(:disabled) {
        color: var(--dark-brown);
        text-decoration: underline;
    }

    .btn-link:disabled {
        color: var(--medium-grey);
        opacity: 0.6;
        cursor: not-allowed;
    }

    .error-top {
        color: #dc3545;
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 15px;
    }

    @media (min-width: 768px) {
        body {
            overflow-x: hidden;
        }

        .col-md-6 {
            height: 100%;
            padding: 0;
        }
        
        .form-container {
            padding: 40px;
            width: 100%;
            max-width: none;
        }
        
        .image-side {
            background-image: url('/images/bg9.jpg');
            background-size: cover;
            background-position: center;
            height: 100%;
        }
    }

    @media (max-width: 767px) {
        .form-container {
            padding: 20px;
        }
        
        .otp-input {
            width: 40px;
            height: 40px;
            font-size: 16px;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById("otpForm");
    const topError = document.getElementById("topError");
    const otpInput = document.getElementById("otpInput");
    const userEmail = document.getElementById("userEmail");
    const resendBtn = document.getElementById("resendBtn");
    const countdownSpan = document.getElementById("countdown");
    const otpInputs = document.querySelectorAll('.otp-input');
    
    const urlParams = new URLSearchParams(window.location.search);
    const email = urlParams.get('email');
    if (email) {
        userEmail.value = decodeURIComponent(email);
    }

    otpInputs.forEach((input, index) => {
        input.addEventListener('input', (e) => {
            updateOtpValue();
            if (e.target.value.length === 1) {
                if (index < otpInputs.length - 1) {
                    otpInputs[index + 1].focus();
                } else {
                    input.blur();
                }
            }
        });
        
        input.addEventListener('keydown', (e) => {
            if (e.key === 'Backspace' && !e.target.value && index > 0) {
                otpInputs[index - 1].focus();
            }
        });
        
        input.addEventListener('paste', (e) => {
            e.preventDefault();
            const pasteData = e.clipboardData.getData('text').trim();
            if (/^\d+$/.test(pasteData) && pasteData.length <= otpInputs.length) {
                for (let i = 0; i < pasteData.length; i++) {
                    if (index + i < otpInputs.length) {
                        otpInputs[index + i].value = pasteData[i];
                    }
                }
                const nextIndex = Math.min(index + pasteData.length, otpInputs.length - 1);
                otpInputs[nextIndex].focus();
                updateOtpValue();
            }
        });
    });
    
    function updateOtpValue() {
        let otpValue = '';
        otpInputs.forEach(input => {
            otpValue += input.value;
        });
        otpInput.value = otpValue;
    }
    
    const FORGOT_PASSWORD_STORAGE_KEY = 'forgotPasswordOtpCreatedAt';
    let otpCreatedAt = urlParams.get('createdAt') ? 
        parseInt(urlParams.get('createdAt')) : 
        (localStorage.getItem(FORGOT_PASSWORD_STORAGE_KEY) ? parseInt(localStorage.getItem(FORGOT_PASSWORD_STORAGE_KEY)) : null);
    
    if (urlParams.get('createdAt')) {
        localStorage.setItem(FORGOT_PASSWORD_STORAGE_KEY, otpCreatedAt);
    }
    
    const otpExpirySeconds = 60;
    let timeLeft = otpCreatedAt ? calculateTimeLeft(otpCreatedAt, otpExpirySeconds) : 0;
    let timerInterval;

    function calculateTimeLeft(createdAt, expirySeconds) {
        const now = Date.now();
        const expiryTime = createdAt + (expirySeconds * 1000);
        const remainingMs = expiryTime - now;
        return Math.max(0, Math.floor(remainingMs / 1000));
    }

    const startTimer = (newCreationTime = null) => {
        if (newCreationTime) {
            localStorage.setItem(FORGOT_PASSWORD_STORAGE_KEY, newCreationTime);
            timeLeft = otpExpirySeconds;
        } else if (otpCreatedAt) {
            timeLeft = calculateTimeLeft(otpCreatedAt, otpExpirySeconds);
        } else {
            timeLeft = 0;
        }
        
        resendBtn.disabled = true;
        countdownSpan.textContent = timeLeft + "s";
        
        if (timeLeft <= 0) {
            countdownSpan.textContent = "0s";
            topError.textContent = "OTP has expired. Please resend.";
            resendBtn.disabled = false;
            return;
        }
        
        clearInterval(timerInterval);
        timerInterval = setInterval(() => {
            timeLeft--;
            countdownSpan.textContent = timeLeft + "s";
            if (timeLeft <= 0) {
                clearInterval(timerInterval);
                countdownSpan.textContent = "0s";
                topError.textContent = "OTP has expired. Please resend.";
                resendBtn.disabled = false;
            }
        }, 1000);
    };

    startTimer();

    form.addEventListener("input", () => {
        if (topError.textContent !== "OTP has expired. Please resend.") {
            topError.textContent = "";
        }
    });

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        
        if (otpInput.value.length !== 6) {
            topError.textContent = "Please enter the complete 6-digit OTP";
            return;
        }
        
        if (timeLeft <= 0) {
            topError.textContent = "OTP has expired. Please resend.";
            return;
        }
        
        if (topError.textContent !== "OTP has expired. Please resend.") {
            topError.textContent = "";
        }

        const otp = otpInput.value.trim();
        const email = userEmail.value;

        try {
            const res = await fetch("/verify-forgot-password-otp", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ otp, email })
            });

            const data = await res.json();

            if (res.ok) {
                localStorage.removeItem(FORGOT_PASSWORD_STORAGE_KEY);
                topError.style.color = "green";
                topError.textContent = "OTP verified successfully!";
                setTimeout(() => {
                    window.location.href = data.redirect;
                }, 1500);
            } else {
                topError.textContent = data.error || "Unexpected error in OTP verification";
            }
        } catch (err) {
            topError.textContent = "Submission failed: " + err.message;
            console.error(err);
        }
    });

    resendBtn.addEventListener("click", async () => {
        resendBtn.disabled = true;
        topError.textContent = "Resending OTP...";

        try {
            const email = userEmail.value;
            const res = await fetch("/resend-forgot-password-otp", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email })
            });
            
            const data = await res.json();

            if (res.ok) {
                const newCreationTime = data.otpCreatedAt || Date.now();
                localStorage.setItem(FORGOT_PASSWORD_STORAGE_KEY, newCreationTime);
                otpInputs.forEach(input => input.value = '');
                otpInput.value = '';
                otpInputs[0].focus();
                topError.textContent = "OTP resent successfully. Please check your email.";
                topError.style.color = "#2A2A2A";
                startTimer(newCreationTime);
            } else {
                topError.textContent = data.error || "Failed to resend OTP";
                resendBtn.disabled = false;
            }
        } catch (err) {
            topError.textContent = "Error: " + err.message;
            console.error(err);
            resendBtn.disabled = false;
        }
    });
});
</script>
<%- include('../partials/user/footer') %>